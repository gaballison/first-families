{"version":3,"file":"bundle.js","sources":["../src/js/app.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n\r\n    //---------------------------------------\r\n    //  MODULES\r\n    //---------------------------------------\r\n    //import * as d3 from \"d3.mjs\";\r\n    //const d3 = require('d3');\r\n\r\n\r\n    //---------------------------------------\r\n    //  GLOBAL VARIABLES\r\n    //---------------------------------------\r\n    let html = document.getElementById('results');\r\n    let dataList = [];\r\n    let resultsHeader = document.getElementById('resultsHeader');\r\n    let current_page = 1;\r\n    let rows = 10;\r\n    const viewYear = document.getElementById('view-year');\r\n    const viewCounty = document.getElementById('view-county');\r\n    const pagination = document.getElementById('pagination');\r\n    const navForm = document.getElementById('searchFilter');\r\n    const mainSearch = document.getElementById('mainSearch');\r\n\r\n\r\n    //---------------------------------------\r\n    //  FETCH THE DATA\r\n    //---------------------------------------\r\n\r\n    // initial fetch of entire data\r\n    fetch('./data/FFAncestors.json')\r\n        .then(function(response) {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n\r\n            // Build the table of initial data\r\n            buildTable(data);\r\n            dataList = data;\r\n\r\n            // Generate the data for visualizations\r\n            getData();\r\n\r\n            \r\n\r\n\r\n        });\r\n\r\n    \r\n    function fetchData(dataFunction) {\r\n        fetch('./data/FFAncestors.json')\r\n        .then(function(response) {\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => dataFunction(data));\r\n        \r\n    }\r\n\r\n    // filtering data\r\n    function filterData(filter, value) {\r\n        fetchData();\r\n        beginTable();\r\n\r\n        // return subset of data that only matches specified filter\r\n        let filteredData = [];\r\n\r\n        if (filter === 'county') {\r\n            // match on primary_county or secondary_county\r\n            filteredData = dataList.filter( obj => obj.primary_county === value || obj.secondary_county === value);\r\n            resultsHeader.innerHTML = `Showing ${filteredData.length} results in ${value} County`;\r\n        } else if (filter === 'year') {\r\n            filteredData = dataList.filter( obj => obj[value] > 0);\r\n            resultsHeader.innerHTML = `Showing the ${filteredData.length} ancestors from the ${value} cohort`;\r\n        }\r\n\r\n        const sortedData = filteredData.sort(sortSurnameAsc);\r\n        sortedData.forEach(obj => makeRows(obj));\r\n        \r\n        html.innerHTML += `</tbody></table>`;\r\n    }\r\n\r\n    function sortData(filter, value, sortMethod) {\r\n        \r\n        beginTable();\r\n\r\n        // return subset of data that only matches specified filter\r\n        let filteredData = [];\r\n\r\n        if (filter === 'county') {\r\n            // match on primary_county or secondary_county\r\n            filteredData = dataList.filter( obj => obj.primary_county === value || obj.secondary_county === value);\r\n            resultsHeader.innerHTML = `Showing ${filteredData.length} results in ${value} County`;\r\n        } else if (filter === 'year') {\r\n            // match on application year\r\n            // console.log(`Value is ${value} which is type ${typeof value}`)\r\n            filteredData = dataList.filter( obj => obj.first_added === parseInt(value));\r\n            resultsHeader.innerHTML = `Showing ${filteredData.length} results in ${value}`;\r\n        }\r\n\r\n        \r\n        const sortedData = filteredData.sort(sortSurnameAsc);\r\n        sortedData.forEach(obj => makeRows(obj));\r\n        \r\n        html.innerHTML += `</tbody></table>`;\r\n            \r\n    }\r\n\r\n    /**\r\n     * Function to search the JSON data for given input\r\n     * @param {string} name - Name input from #genericSearch input field\r\n     */\r\n    function searchData(name) {\r\n        // Get the data\r\n        fetchData();\r\n        //console.dir(dataList);\r\n\r\n        // Start building the table\r\n        beginTable();\r\n\r\n        // Split the input into individual words\r\n        const words = name.split(\" \");\r\n        const wLength = words.length;\r\n        const surname = words[wLength-1].toUpperCase();\r\n        let searchNames = [];\r\n\r\n        // Loop through the initial data array\r\n        for (let i = 0; i < dataList.length; i++) {\r\n            const ancestor = dataList[i];\r\n\r\n            // If they entered more than 1 search term, divvy it up to search by surname first\r\n            if (wLength > 1) {\r\n\r\n                if ( ancestor.surname.toUpperCase().includes(surname) || ancestor.maiden_name.toUpperCase().includes(surname) ) {\r\n                    console.log(`Yay, we have a surname match for ${surname}`);\r\n\r\n                    const shortArray = words.slice(0,(wLength-1));\r\n                    console.log(`The new short array is ${shortArray}`);\r\n\r\n                    shortArray.forEach(word => {\r\n                        if (ancestor.first_name.toUpperCase().includes(word.toUpperCase()) || ancestor.middle_name.toUpperCase().includes(word.toUpperCase())) {\r\n                            console.log(`We have a match in the short array for ${word}`);\r\n\r\n                            searchNames.push(ancestor);\r\n                        }\r\n                    });\r\n                }\r\n            // otherwise search multiple fields for instances of that single term\r\n            } else {\r\n                \r\n                if(ancestor.first_name.toUpperCase().includes(name.toUpperCase()) || ancestor.middle_name.toUpperCase().includes(name.toUpperCase()) || ancestor.maiden_name.toUpperCase().includes(name.toUpperCase()) || ancestor.surname.toUpperCase().includes(name.toUpperCase())) {\r\n                    \r\n                    searchNames.push(ancestor);\r\n                }\r\n\r\n            }\r\n            \r\n        }\r\n\r\n        // Make sure we don't have any duplicates in the array\r\n        const uniqueAncestors = searchNames.filter((v,i,a)=>a.findIndex(t=>(t.ancestor_id === v.ancestor_id))===i);\r\n\r\n        // Update header to show number of results + search term\r\n        resultsHeader.innerHTML = `Showing all <span class='highlight'>${uniqueAncestors.length}</span> results for ${name}`;\r\n\r\n        // Sort the array alphabetically and then print it\r\n        const sortedData = uniqueAncestors.sort(sortSurnameAsc);\r\n        sortedData.forEach(obj => makeRows(obj));\r\n\r\n        html.innerHTML += `</tbody></table>`;\r\n\r\n    }\r\n\r\n    //---------------------------------------\r\n    //  HELPER FUNCTIONS\r\n    //---------------------------------------\r\n\r\n    function beginTable() {\r\n        // Start building the table\r\n        html.innerHTML = `\r\n        <table id=\"main-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Name <i class=\"fad fa-sort-down fa-lg sort\" id=\"col-name\" onclick=\"toSort('name')\"></i></th>\r\n                    <th>County <i class=\"fas fa-sort fa-lg sort\" id=\"col-county\" onclick=\"toSort('county')\"></i></th>\r\n                    <th>First Year <i class=\"fas fa-sort fa-lg sort\" id=\"col-year\" onclick=\"toSort('year')\"></i></th>\r\n                    <th>Applicants <i class=\"fas fa-sort fa-lg sort\" id=\"col-apps\" onclick=\"toSort('applicants')\"></i></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n        `;\r\n    }\r\n\r\n    function buildTable(data) {\r\n        // Start building the table\r\n        beginTable();\r\n\r\n        // Build the header to show how many results in total\r\n        resultsHeader.innerHTML = `Showing all <span class='highlight'>${data.length}</span> approved ancestors`;\r\n\r\n        // Sort the data alphabetically by surname\r\n        const sortedData = data.sort(sortSurnameAsc);\r\n        sortedData.forEach(obj => makeRows(obj));\r\n        \r\n        // Close out the table\r\n        html.innerHTML += `</tbody></table>`;\r\n    }\r\n\r\n    function makeRows(object) {\r\n        let table = document.getElementById(\"main-table\").getElementsByTagName(\"tbody\")[0];\r\n        let newRow = table.insertRow();\r\n\r\n        // construct name\r\n        let row = `<td>${makeName(object)}</td>`;\r\n\r\n        // get county (or counties)\r\n        row += `<td>${makeCounty(object)}</td>`\r\n\r\n        // print first year someone joined through that ancestor\r\n        row += `<td>${object['first_added']}</td>`;\r\n\r\n        // print total # of people who joined through that ancestor\r\n        row += `<td>${object['total_applicants']}</td>`;\r\n\r\n        row += `</tr>`;\r\n        //console.log(`row = ${row}`);\r\n        \r\n        newRow.innerHTML = row;\r\n    }\r\n\r\n    function makeName(object) {\r\n        // returns name as string formatted as LAST, Title First Middle (Maiden) Suffix\r\n        // e.g. ARMSTRONG, Captain John Andrew II or HARRIS, Jane Elizabeth (Jones)\r\n        let fullName = `<strong>${object['surname'].toUpperCase()}</strong>, `;\r\n\r\n        if (object['title']) {\r\n            fullName += `${object['title']} ${object['first_name']}`;\r\n        } else {\r\n            fullName += `${object['first_name']}`;\r\n        }\r\n\r\n        if (object['middle_name']) {\r\n            fullName += ` ${object['middle_name']}`;\r\n        }\r\n\r\n        if (object['maiden_name']) {\r\n            fullName += ` (${object['maiden_name']})`\r\n        }\r\n\r\n        if (object['suffix']) {\r\n            fullName += ` ${object['suffix']}`;\r\n        }\r\n\r\n        return fullName;\r\n    }\r\n\r\n    // sometimes people listed an ancestor in 2 separate counties\r\n    function makeCounty(object) {\r\n        let county = `${object['primary_county']}`;\r\n\r\n        if(object['secondary_county']) {\r\n            county += `, ${object['secondary_county']}`;\r\n        }\r\n\r\n        return county;\r\n    }\r\n\r\n\r\n    //---------------------------------------\r\n    //  DATA FOR VISUALIZATIONS\r\n    //---------------------------------------\r\n    function getData() {\r\n        // Fetch data so we can use dataList\r\n        // fetchData();\r\n\r\n        // Create new object for each year 2013-2019 \r\n        let statList = [ ];\r\n        for (let i = 2013; i < 2020; i++) {\r\n            statList.push({ 'year': i, 'new_floyd': 0, 'new_clark': 0, 'new_harrison': 0, 'existing_floyd': 0, 'existing_clark': 0, 'existing_harrison': 0 });\r\n        }\r\n        //console.dir(statList);\r\n\r\n        statList.forEach(item => { \r\n            const year = item['year'];\r\n\r\n            dataList.forEach(person => {\r\n                if (person[year] > 0) {\r\n                    if (person.first_added === parseInt(year)) {\r\n                        // console.log(`${person.first_name} ${person.surname} first added in ${year}`);\r\n                        switch(person.primary_county) {\r\n                            case 'Floyd':\r\n                                item.new_floyd++;\r\n                                break;\r\n                            case 'Clark':\r\n                                item.new_clark++;\r\n                                break;\r\n                            case 'Harrison':\r\n                                item.new_harrison++;\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    } else {\r\n                        // console.log(`${person.first_name} ${person.surname} was used in ${year} but was first added in ${person.first_added}`);\r\n                        switch(person.primary_county) {\r\n                            case 'Floyd':\r\n                                item.existing_floyd++;\r\n                                break;\r\n                            case 'Clark':\r\n                                item.existing_clark++;\r\n                                break;\r\n                            case 'Harrison':\r\n                                item.existing_harrison++;\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        // Start the actual visualization\r\n        //const dataVis = d3.select(\"#datavis\");\r\n       // makeChart(statList);\r\n\r\n    }\r\n\r\n\r\n    //---------------------------------------\r\n    //  COUNTDOWN CLOCK\r\n    //---------------------------------------\r\n\r\n    // Set the date we're counting down to\r\n    const cdDate = new Date(\"Aug 15, 2021 12:00:00\");\r\n    const countDownDate = cdDate.getTime();\r\n\r\n\r\n    // Update the count down every 1 second\r\n    const x = setInterval(function() {\r\n\r\n        // Get today's date and time\r\n        const now = new Date().getTime();\r\n\r\n        // Find the distance between now and the count down date\r\n        const distance = countDownDate - now;\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        // Display the result in the element with id=\"demo\"\r\n        document.getElementById(\"countdown\").innerHTML = days + \"d \" + hours + \"h \"\r\n        + minutes + \"m \" + seconds + \"s \";\r\n        document.getElementById(\"countdown\").setAttribute('title', cdDate);\r\n\r\n        // If the count down is finished, write some text\r\n        if (distance < 0) {\r\n            clearInterval(x);\r\n            document.getElementById(\"countdown\").innerHTML += \"PASSED!\";\r\n        }\r\n    }, 1000);\r\n\r\n    function makeChart(data) {\r\n\r\n        // Create an empty (detached) chart container.\r\n        const div = d3.create(\"div\");\r\n        \r\n        // Apply some styles to the chart container.\r\n        div.style(\"font\", \"10px sans-serif\");\r\n        div.style(\"text-align\", \"right\");\r\n        div.style(\"color\", \"white\");\r\n        \r\n        // Define the initial (empty) selection for the bars.\r\n        const bar = div.selectAll(\"div\");\r\n        \r\n        // Bind this selection to the data (computing enter, update and exit).\r\n        const barUpdate = bar.data(data);\r\n        \r\n        // Join the selection and the data, appending the entering bars.\r\n        const barNew = barUpdate.join(\"div\");\r\n        \r\n        // Apply some styles to the bars.\r\n        barNew.style(\"background\", \"steelblue\");\r\n        barNew.style(\"padding\", \"3px\");\r\n        barNew.style(\"margin\", \"1px\");\r\n        \r\n        // Set the width as a function of data.\r\n        barNew.style(\"width\", d => `${d * 10}px`);\r\n        \r\n        // Set the text of each bar as the data.\r\n        barNew.text(d => d);\r\n        \r\n        // Return the chart container.\r\n        return div.node();\r\n\r\n    }\r\n\r\n\r\n    //---------------------------------------\r\n    //  SORTING FUNCTIONS\r\n    //---------------------------------------\r\n\r\n    function sortSurnameAsc(a, b) {\r\n        if ( a.surname < b.surname ){\r\n            return -1;\r\n        }\r\n        else if ( a.surname > b.surname ){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function sortFirstNameAsc(a, b) {\r\n        if ( a.first_name < b.first_name ){\r\n            return -1;\r\n        }\r\n        else if ( a.first_name > b.first_name ){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function sortApps(a, b) {\r\n        if ( a.first_added < b.first_added ){\r\n            return -1;\r\n        }\r\n        else if ( a.first_added > b.first_added ){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    //---------------------------------------\r\n    //  EVENT HANDLING\r\n    //---------------------------------------\r\n    function toSort(what) {\r\n        console.log(`You clicked on ${what}`);\r\n        if (what === 'applicants') {\r\n\r\n        }\r\n    }\r\n\r\n    navForm.addEventListener('change', event => {\r\n        console.log(`You changed ${event.target.id} to ${event.target.value}!`);\r\n        // then we fetch the data matching that criteria and build a table with the results\r\n        if (event.target.id === 'county') {\r\n            filterData('county', event.target.value);\r\n        } else if (event.target.id === 'joinYear') {\r\n            filterData('year', event.target.value);\r\n        }\r\n        navForm.reset();\r\n    });\r\n\r\n    mainSearch.addEventListener('submit', event => {\r\n        event.preventDefault();\r\n        const searchTerm = document.getElementById('genericSearch').value;\r\n        searchData(searchTerm);\r\n    });\r\n\r\n\r\n\r\n    //---------------------------------------\r\n    //  PAGINATION\r\n    //---------------------------------------\r\n    function displayList (items, wrapper, rows_per_page, page) {\r\n        wrapper.innerHTML = \"\";\r\n        page--;\r\n\r\n        let start = rows_per_page * page;\r\n        let end = start + rows_per_page;\r\n        let paginatedItems = items.slice(start, end);\r\n\r\n        for (let i = 0; i < paginatedItems.length; i++) {\r\n            let item = paginatedItems[i];\r\n\r\n            let item_element = document.createElement('div');\r\n            item_element.classList.add('item');\r\n            item_element.innerText = item;\r\n            \r\n            wrapper.appendChild(item_element);\r\n        }\r\n    }\r\n\r\n    function setupPagination (items, wrapper, rows_per_page) {\r\n        wrapper.innerHTML = \"\";\r\n\r\n        let page_count = Math.ceil(items.length / rows_per_page);\r\n        for (let i = 1; i < page_count + 1; i++) {\r\n            let btn = paginationButton(i, items);\r\n            wrapper.appendChild(btn);\r\n        }\r\n    }\r\n\r\n    function paginationButton (page, items) {\r\n        let button = document.createElement('button');\r\n        button.innerText = page;\r\n\r\n        if (current_page == page) button.classList.add('active');\r\n\r\n        button.addEventListener('click', function () {\r\n            current_page = page;\r\n            displayList(items, list_element, rows, current_page);\r\n\r\n            let current_btn = document.querySelector('.pagenumbers button.active');\r\n            current_btn.classList.remove('active');\r\n\r\n            button.classList.add('active');\r\n        });\r\n\r\n        return button;\r\n    }\r\n\r\n    // DisplayList(list_items, list_element, rows, current_page);\r\n    // SetupPagination(list_items, pagination_element, rows);\r\n\r\n    // source: https://github.com/TylerPottsDev/vanillajs-pagination/blob/master/main.js\r\n\r\n});\r\n"],"names":[],"mappings":"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"}